State 0:
e1' -> . e1 [ # ]
-- On ID shift to state 1
-- On e1 shift to state 2
-- On e shift to state 3

State 1:
e -> ID . [ RP LP EOF ]
-- On RP reduce production e -> ID
-- On LP reduce production e -> ID
-- On EOF reduce production e -> ID

State 2:
e1' -> e1 . [ # ]
-- On # accept e1

State 3:
e -> e . LP e RP [ LP EOF ]
e1 -> e . EOF [ # ]
-- On LP shift to state 4
-- On EOF shift to state 7

State 4:
e -> e LP . e RP [ RP LP EOF ]
-- On ID shift to state 1
-- On e shift to state 5

State 5:
e -> e . LP e RP [ RP LP ]
e -> e LP e . RP [ RP LP EOF ]
-- On RP shift to state 6
-- On LP shift to state 4

State 6:
e -> e LP e RP . [ RP LP EOF ]
-- On RP reduce production e -> e LP e RP
-- On LP reduce production e -> e LP e RP
-- On EOF reduce production e -> e LP e RP

State 7:
e1 -> e EOF . [ # ]
-- On # reduce production e1 -> e EOF

